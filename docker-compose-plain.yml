version: '3.9'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    hostname: zookeeper
    networks:
      esnet:
        aliases:
          - zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - type: volume
        source: zoo_data
        target: /var/lib/zookeeper/data
      - type: volume
        source: zoo_log
        target: /var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://kafka:9092,OUTSIDE://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1 
    networks:
      esnet:
        aliases:
          - kafka
    volumes:
      - type: volume
        source: kafka_data
        target: /var/lib/kafka/data
    ports:
      - 29092:29092

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.5.1
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - zookeeper
      - kafka
      - elasticsearch
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: 'connect'
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      # CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      # CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.storage.StringConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor'
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor'
      CONNECT_REST_ADVERTISED_HOST_NAME: 'connect'
      # CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-3.3.0.jar
      CONNECT_PLUGIN_PATH: /connect-plugins
    volumes:
      - type: bind
        source: /opt/EKK/connect-plugins
        target: /connect-plugins
    networks:
      esnet:
        aliases:
          - kafka-connect
    ports:
      - 8083:8083
    
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    hostname: elasticsearch
    container_name: elasticsearch
    environment:
      xpack.security.enabled: 'false'
      discovery.type: single-node
      bootstrap.memory_lock: true
      ES_JAVA_OPTS: -Xms2g -Xmx2g 
      cluster.routing.allocation.disk.threshold_enabled: 'false'
      path.repo: /usr/share/elasticsearch/data,/usr/share/elasticsearch/backups
    volumes:
      - type: volume
        source: esdata
        target: /usr/share/elasticsearch/data
      - type: bind
        source: /opt/EKK/backups
        target: /usr/share/elasticsearch/backups
    networks:
      esnet:
        aliases:
          - elasticsearch
    ports:
      - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      start_period: 10s
      interval: 10s
      retries: 20
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"' 

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.2
    hostname: kibana
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      XPACK_SECURITY_ENABLED: 'false'
    networks:
      esnet:
        aliases:
          - kibana
    ports:
      - 5601:5601

volumes:
  esdata:
    external: true
  kafka_data:
    external: true
  zoo_data:
    external: true
  zoo_log:
    external: true

networks:
  esnet:
    driver: bridge